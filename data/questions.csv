category,title
Data Types & Variables,What are the primitive data types in JavaScript?
Data Types & Variables,How do you check the data type of a variable?
Data Types & Variables,What are template literals and how are they used?
Data Types & Variables,Explain the concept of tagged templates.
Data Types & Variables,What is the spread operator and how is it used?
Data Types & Variables,What is the difference between `null` and `undefined`?
Data Types & Variables,How do you convert a string to a number in JavaScript?
Data Types & Variables,What are global variables and why are they generally avoided?
Hoisting,What is hoisting in JavaScript?
Hoisting,"Explain the difference in hoisting between `var`, `let`, and `const`."
Hoisting,How does hoisting affect function declarations and expressions?
Hoisting,What are the potential issues caused by hoisting?
Hoisting,How can you avoid problems related to hoisting?
Operators & Control Flow,Explain the difference between the `==` and `===` operators.
Operators & Control Flow,What are the different types of loops in JavaScript?
Operators & Control Flow,What is the purpose of the `break` and `continue` statements?
Operators & Control Flow,Explain the difference between `&&` and `||` operators.
Operators & Control Flow,What is the ternary operator and how is it used?
Operators & Control Flow,What is the difference between `for...in` and `for...of` loops?
Operators & Control Flow,How do you access the index of an element in an array during iteration?
Operators & Control Flow,What is the purpose of the `switch` statement?
Operators & Control Flow,What are rest parameters and how are they used?
Operators & Control Flow,Explain the concept of the spread operator and its uses.
Functions,What is a function declaration and how does it differ from a function expression?
Functions,Explain the concept of scope in JavaScript.
Functions,What are closures and how are they used?
Functions,What is the difference between a parameter and an argument?
Functions,Explain the concept of hoisting with regards to functions.
Functions,What are arrow functions and how do they differ from regular functions?
Functions,What is the `this` keyword and how does its context change?
Functions,Explain the concept of higher-order functions.
Functions,What are callback functions and how are they used?
Functions,What is recursion and how is it used in JavaScript?
Functions,What are default parameters and how are they used?
Objects & Arrays,What are the different ways to create an object in JavaScript?
Objects & Arrays,Explain the difference between dot notation and bracket notation for accessing object properties.
Objects & Arrays,What are the different methods for iterating over an array?
Objects & Arrays,"How do you add, remove, and update elements in an array?"
Objects & Arrays,What are the different ways to copy an object or an array?
Objects & Arrays,Explain the difference between shallow copy and deep copy.
Objects & Arrays,What are the advantages of using the spread operator with arrays and objects?
Objects & Arrays,How do you check if an object has a specific property?
Objects & Arrays,What are destructuring assignments and how are they used with objects and arrays?
Objects & Arrays,Explain the concept of object prototypes and prototypal inheritance.
Objects & Arrays,Explain the concept of destructuring assignment for objects and arrays.
Objects & Arrays,What is `Object.freeze()` for?
Objects & Arrays,What is `Object.seal()` for?
Objects & Arrays,What is `Object.preventExtensions()` for?
Objects & Arrays,How do you reliably determine whether an object is empty?
Asynchronous JavaScript,What is the difference between synchronous and asynchronous code?
Asynchronous JavaScript,Explain the concept of a callback function in asynchronous operations.
Asynchronous JavaScript,What are Promises and how do they work?
Asynchronous JavaScript,Explain the different states of a Promise.
Asynchronous JavaScript,What are the advantages of using Promises over callbacks?
Asynchronous JavaScript,What is the use of `Promise.all()`
Asynchronous JavaScript,How is `Promise.all()` different from `Promise.allSettled()`?
Asynchronous JavaScript,What is async/await and how does it simplify asynchronous code?
Asynchronous JavaScript,How do you handle errors in asynchronous operations?
Asynchronous JavaScript,What is the event loop and how does it relate to asynchronous JavaScript?
Asynchronous JavaScript,Explain the concept of a microtask queue.
Asynchronous JavaScript,"What is the difference between `setTimeout()`, `setImmediate()`, and `process.nextTick()`?"
Asynchronous JavaScript,What are the different ways to make an API call in JavaScript?
Prototypes & Inheritance,Explain the concept of prototypal inheritance in JavaScript.
Prototypes & Inheritance,What is the prototype chain and how does it work?
Prototypes & Inheritance,How do you create a constructor function?
Prototypes & Inheritance,What is the purpose of the `new` keyword?
Prototypes & Inheritance,Explain the difference between classical inheritance and prototypal inheritance.
Prototypes & Inheritance,What are static methods in classes?
Prototypes & Inheritance,Explain the concept of inheritance in ES2015 classes.
Prototypes & Inheritance,Explain the concept of classes in ES2015 and how they differ from constructor functions.
Closures & Scope,What is a closure and how does it work?
Closures & Scope,Explain the concept of lexical scoping.
Closures & Scope,How can closures be used to create private variables?
Closures & Scope,What are the potential pitfalls of using closures?
Closures & Scope,"Explain the difference between global scope, function scope, and block scope."
This Keyword,Explain the different ways the `this` keyword can be bound.
This Keyword,How does the `this` keyword behave in arrow functions?
This Keyword,What are the common pitfalls of using the `this` keyword?
This Keyword,"How can you explicitly set the value of `this` using `call`, `apply`, and `bind`?"
This Keyword,Explain the concept of `this` binding in event handlers.
DOM Manipulation & Events,What is the DOM and how is it structured?
DOM Manipulation & Events,Explain the difference between `document.querySelector()` and `document.getElementById()`.
DOM Manipulation & Events,"How do you add, remove, and modify HTML elements using JavaScript?"
DOM Manipulation & Events,What are event listeners and how are they used?
DOM Manipulation & Events,Explain the event phases in a browser
DOM Manipulation & Events,What is event bubbling and capturing?
DOM Manipulation & Events,Explain the concept of event delegation.
DOM Manipulation & Events,How do you prevent the default behavior of an event?
DOM Manipulation & Events,What is the difference between `event.preventDefault()` and `event.stopPropagation()`?
DOM Manipulation & Events,What is the difference between `innerHTML` and `textContent`?
DOM Manipulation & Events,How do you manipulate CSS styles using JavaScript?
Web APIs & Browser APIs,What is the difference between the Window object and the Document object?
Web APIs & Browser APIs,"Explain the purpose of the following APIs: localStorage, sessionStorage, IndexedDB."
Web APIs & Browser APIs,How do you make an HTTP request using the Fetch API?
Web APIs & Browser APIs,What are Web Workers and how can they be used?
Web APIs & Browser APIs,Explain the concept of the Web Socket API.
Web APIs & Browser APIs,What are polyfills used for?
Web APIs & Browser APIs,How do you detect if JavaScript is disabled on a page?
Web APIs & Browser APIs,What is the `Intl` namespace object for?
Web APIs & Browser APIs,How do you validate form elements using the Constraint Validation API?
Web APIs & Browser APIs,How do you use `window.history` API?
Web APIs & Browser APIs,How do `<iframe>` on a page communicate?
Web APIs & Browser APIs,How do you cancel a `fetch` request?
Web APIs & Browser APIs,What is the difference between document `load` and `DOMContentLoaded` events
Web APIs & Browser APIs,How do you redirect to a new page in JavaScript?
Web APIs & Browser APIs,How do you get the query string values of the current page in JavaScript?
Web APIs & Browser APIs,What are Progressive Web Applications (PWAs)?
Modules,What are modules and why are they useful?
Modules,Explain the difference between CommonJS and ES modules.
Modules,How do you import and export modules in JavaScript?
Modules,What are the benefits of using a module bundler?
Modules,Explain the concept of tree shaking in module bundling.
Modules,What are the metadata fields of a module?
Error Handling,What are the different types of errors in JavaScript?
Error Handling,How do you handle errors using `try...catch` blocks?
Error Handling,What is the purpose of the `finally` block?
Error Handling,How can you create custom error objects?
Error Handling,Explain the concept of error propagation in JavaScript.
Currying & Partial Application,What is currying and how does it work?
Currying & Partial Application,Explain the concept of partial application.
Currying & Partial Application,What are the benefits of using currying and partial application?
Currying & Partial Application,Provide some examples of how currying and partial application can be used.
Currying & Partial Application,How do currying and partial application differ from each other?
Sets & Maps,What are `Set`s and `Map`s and how are they used?
Sets & Maps,How do `Map`s in JavaScript differ from `Object`s?
Sets & Maps,What are some use cases for using a `WeakSet` or `WeakMap` in JavaScript?
Sets & Maps,How do you convert a `Set` to an array in JavaScript?
Sets & Maps,How do `Set`s and `Map`s handle equality checks for objects?
Performance Optimization,What are some common performance bottlenecks in JavaScript applications?
Performance Optimization,Explain the concept of debouncing and throttling.
Performance Optimization,How can you optimize DOM manipulation for better performance?
Performance Optimization,What are some techniques for reducing reflows and repaints?
Performance Optimization,Explain the concept of lazy loading and how it can improve performance.
Performance Optimization,What are Web Workers and how can they be used to improve performance?
Performance Optimization,Explain the concept of caching and how it can be used to improve performance.
Performance Optimization,What are some tools that can be used to measure and analyze JavaScript performance?
Performance Optimization,How can you optimize network requests for better performance?
Testing,What are the different types of testing in software development?
Testing,"Explain the difference between unit testing, integration testing, and end-to-end testing."
Testing,What are some popular JavaScript testing frameworks?
Testing,How do you write unit tests for JavaScript code?
Testing,Explain the concept of test-driven development (TDD).
Testing,What are mocks and stubs and how are they used in testing?
Testing,How can you test asynchronous code in JavaScript?
Testing,What are some best practices for writing maintainable and effective tests?
Testing,Explain the concept of code coverage and how it can be used to assess test quality.
Testing,What are some tools that can be used for JavaScript testing?
Design Patterns,What are design patterns and why are they useful?
Design Patterns,Explain the concept of the Singleton pattern.
Design Patterns,What is the Factory pattern and how is it used?
Design Patterns,Explain the Observer pattern and its use cases.
Design Patterns,What is the Module pattern and how does it help with encapsulation?
Design Patterns,Explain the concept of the Prototype pattern.
Design Patterns,What is the Decorator pattern and how is it used?
Design Patterns,Explain the concept of the Strategy pattern.
Design Patterns,What is the Command pattern and how is it used?
Security,What is Cross-Site Scripting (XSS) and how can you prevent it?
Security,Explain the concept of Cross-Site Request Forgery (CSRF) and its mitigation techniques.
Security,How can you prevent SQL injection vulnerabilities in JavaScript applications?
Security,What are some best practices for handling sensitive data in JavaScript?
Security,Explain the concept of Content Security Policy (CSP) and how it enhances security.
Security,What are some common security headers and their purpose?
Security,How can you prevent clickjacking attacks?
Security,Explain the concept of input validation and its importance in security.
Security,What are some tools and techniques for identifying security vulnerabilities in JavaScript code?
Security,How can you implement secure authentication and authorization in JavaScript applications?
